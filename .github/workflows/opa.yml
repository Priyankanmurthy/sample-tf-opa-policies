name: OPA
on: [push, pull_request, workflow_dispatch]
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2.0.0
    - name: OPA Test
      uses: petroprotsakh/opa-test-action@v2.1
      with:
        options: -v
        tests: |
          cost
          external_data
          aws/enforce_aws_resource.rego;aws/enforce_aws_resource_test.rego;aws/enforce_aws_resource_mock.json
          aws/enforce_aws_iam_and_workspace.rego;aws/enforce_aws_iam_and_workspace_test.rego;aws/enforce_aws_iam_and_workspace_mock.json
          aws/enforce_s3_buckets_encryption.rego;aws/enforce_s3_buckets_encryption_test.rego;aws/enforce_s3_buckets_encryption_mock.json
          aws/enforce_kms_key_names.rego;aws/enforce_kms_key_names.test.rego;aws/enforce_kms_key_names.mock.json
          aws/enforce_iam_instance_profiles.rego;aws/enforce_iam_instance_profiles.test.rego;aws/enforce_iam_instance_profiles.mock.json
          aws/enforce_ebs_del_on_term.rego;aws/enforce_ebs_del_on_term.test.rego;aws/enforce_ebs_del_on_term.mock.json
          aws/enforce_instance_subnet.rego;aws/enforce_instance_subnet.test.rego;aws/enforce_instance_subnet.mock.json
          aws/enforce_lb_subnets.rego;aws/enforce_lb_subnets.test.rego;aws/enforce_lb_subnets.mock.json
          aws/enforce_rds_subnets.rego;aws/enforce_rds_subnets.test.rego;aws/enforce_rds_subnets.mock.json
          management/denied_provisioners.rego;management/denied_provisioners_test.rego;management/denied_provisioners_mock.json
          management/enforce_ami_owners.rego;management/enforce_ami_owners_test.rego;management/enforce_ami_owners_mock.json
          management/instance_types.rego;management/instance_types_test.rego;management/instance_types_mock.json
          management/resource_tags.rego;management/resource_tags_test.rego;management/resource_tags_mock.json
          management/whitelist_ami.rego;management/whitelist_ami_test.rego;management/whitelist_ami_mock.json
          management/workspace_name.rego;management/workspace_name_test.rego;management/workspace_name_mock.json
          management/workspace_tags.rego;management/workspace_tags_test.rego;management/workspace_tags_mock.json
          modules/pin_module_version.rego;modules/pin_module_version_test.rego;modules/pin_module_version_mock.json;
          modules/required_modules.rego;modules/required_modules_test.rego;modules/required_modules_mock.json;
          placement
          providers
          user

  test-new-style:
    runs-on: ubuntu-latest
    container:
      image: ubuntu:latest  # Because it has 'curl'
      options: --cpus 1
    steps:
    - name: Checkout
      uses: actions/checkout@v2.0.0
    - name: Install OPA
      env:
        OPA_VERSION: "0.27.1"
      run: |-
        apt-get -yq update && apt-get install -yq curl;
        curl -L -o /usr/bin/opa https://github.com/open-policy-agent/opa/releases/download/v${OPA_VERSION}/opa_linux_amd64 2>/dev/null;
        chmod +x /usr/bin/opa;
    - name: Test
      env:
        TERM: xterm-256color
      run: |-
        # Directories having 'main.tf' are considered a 'new-style' example
        dirs=$(find . -name 'main.tf' | awk -F'/[^/]*$' '{print $1}' | sort | uniq);
        for polgrp in $dirs; do
          # Call opa test command for every Rego file in every example directory.
          for pol in $(find $polgrp -name '*.rego'); do
            tput setaf 2;
            echo "Test $pol";
            tput sgr0;
            opa eval -f pretty --data $pol -i ${pol%.rego}.input.json data.terraform.deny;
          done;
        done;